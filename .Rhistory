tybikemap
tybikemap
tybikemap<-ggmap(TYMap)+geom_point(data=tybikeL,aes(x= tybikeL$lng,y= tybikeL$lat,size=tybikeL$sbi),color ="red")+guides(colour=F)
tybikemap
library(readr)
POLIO_Incidence <- read.csv("C:/Users/hsuen/Downloads/POLIO_Incidence.csv")
POLIO_Incidence <- read.csv("C:/Users/hsuen/Downloads/POLIO_Incidence.csv")
View(POLIO_Incidence)
View(POLIO_Incidence)
pl <- melt(POLIO_Incidence,id.vars = C("YEAR","WEEK"))
library(reshape2)
library(reshape2)
pl <- melt(POLIO_Incidence,id.vars = C("YEAR","WEEK"))
pl <- melt(POLIO_Incidence,id.vars = c("YEAR","WEEK"))
View(pl)
View(pl)
POLIO_Incidence
POLIO_Incidence
View(POLIO_Incidence)
View(POLIO_Incidence)
pl$value<- gsub("-",NA,pl$value)
str(pl)
pl$value<-as.numeric(pl$value)
library(dplyr)
pl %>% group_by(YEAR,variable)
pl <- pl %>% group_by(YEAR,variable)
pl <- pl %>% group_by(YEAR,variable) %>% summarise(sum())
pl <- melt(POLIO_Incidence,id.vars = c("YEAR","WEEK"))
pl$value<- gsub("-",NA,pl$value)
pl$value<-as.numeric(pl$value)
pl <- pl %>% group_by(YEAR,variable) %>% summarise(sum(value))
pl <- melt(POLIO_Incidence,id.vars = c("YEAR","WEEK"))
pl$value<- gsub("-",NA,pl$value)
pl$value<-as.numeric(pl$value)
pl <- pl %>% group_by(YEAR,variable)
pl <- pl %>% group_by(YEAR,variable) %>% summarise(sum(value))
ggplot(pl, aes(YEAR, variable)) + geom_tile(aes(fill = value),colour = "white")+ scale_fill_gradient(low = "white",high = "steelblue")
pl <- pl %>% group_by(YEAR,variable) %>% summarise(sum=sum(value))
pl <- pl %>% group_by(YEAR,variable) %>% summarise(sum=sum(value))
pl <- melt(POLIO_Incidence,id.vars = c("YEAR","WEEK"))
pl$value<- gsub("-",NA,pl$value)
pl$value<-as.numeric(pl$value)
pl <- pl %>% group_by(YEAR,variable) %>% summarise(sum=sum(value))
ggplot(pl, aes(YEAR, variable)) + geom_tile(aes(fill = sum),colour = "white")+ scale_fill_gradient(low = "white",high = "steelblue")
pl <- melt(POLIO_Incidence,id.vars = c("YEAR","WEEK"))
pl$value<- gsub("-",NA,pl$value)
pl$value<-as.numeric(pl$value)
pl <- pl %>% group_by(YEAR,variable) %>% summarise(sum=sum(value),na,rm=T)
pl <- pl %>% group_by(YEAR,variable) %>% summarise(sum=sum(value),na.rm=T)
ggplot(pl, aes(YEAR, variable)) + geom_tile(aes(fill = sum),colour = "white")+ scale_fill_gradient(low = "white",high = "steelblue")
pl <- melt(POLIO_Incidence,id.vars = c("YEAR","WEEK"))
pl$value<- gsub("-",NA,pl$value)
pl$value<-as.numeric(pl$value)
pl <- pl %>% group_by(YEAR,variable) %>% summarise(sum=sum(value,na.rm=T))
ggplot(pl, aes(YEAR, variable)) + geom_tile(aes(fill = sum),colour = "white")+ scale_fill_gradient(low = "white",high = "steelblue")
ggplot(pl, aes(YEAR, variable)) + geom_tile(aes(fill = sum),colour = "white")+ scale_fill_gradient(low = "white",high = "steelblue") +geom_line(x=1955)
ggplot(pl, aes(YEAR, variable)) + geom_tile(aes(fill = sum),colour = "white")+ scale_fill_gradient(low = "white",high = "steelblue") +geom_line(aes(x=1955),color="red")
ggplot(aes(x=1955))+geom_line()
ggplot(pl, aes(YEAR, variable)) + geom_tile(aes(fill = sum),colour = "white")+ scale_fill_gradient(low = "white",high = "steelblue") +geom_vline(aes(x=1995))
ggplot(pl, aes(YEAR, variable)) + geom_tile(aes(fill = sum),colour = "white")+ scale_fill_gradient(low = "white",high = "steelblue") +geom_vline(aes(xintercept=1995))
ggplot(pl, aes(YEAR, variable)) + geom_tile(aes(fill = sum),colour = "white")+ scale_fill_gradient(low = "white",high = "steelblue") +geom_vline(aes(xintercept=1955))
ggplot(pl, aes(YEAR, variable)) + geom_tile(aes(fill = sum),colour = "white")+ scale_fill_gradient(low = "white",high = "steelblue") +geom_vline(aes(xintercept=1955),color="#F3A002")
ggplot(pl, aes(YEAR, variable)) + geom_tile(aes(fill = sum),colour = "white")+ scale_fill_gradient(low = "white",high = "steelblue") +geom_vline(aes(xintercept=1955),color="#E2C43F")
ggplot(pl, aes(YEAR, variable)) + geom_tile(aes(fill = sum),colour = "white")+ scale_fill_gradient(low = "white",high = "steelblue") +geom_vline(aes(xintercept=1955),color="#E2C43F",size=5)
ggplot(pl, aes(YEAR, variable)) + geom_tile(aes(fill = sum),colour = "white")+ scale_fill_gradient(low = "white",high = "steelblue") +geom_vline(aes(xintercept=1955),color="#E2C43F",size=2)
ggplot(pl, aes(YEAR, variable)) + geom_tile(aes(fill = sum),colour = "white")+ scale_fill_gradient(low = "white",high = "steelblue") +geom_vline(aes(xintercept=1955),color="#E2C43F",size=1)
ggplot(pl, aes(YEAR, variable)) + geom_tile(aes(fill = sum),colour = "white")+ scale_fill_gradient(low = "white",high = "steelblue") +geom_vline(aes(xintercept=1955),color="#E2C43F",size=2)
ggplot(pl, aes(YEAR, variable)) + geom_tile(aes(fill = sum),colour = "white")+ scale_fill_gradient(low = "white",high = "steelblue") +geom_vline(aes(xintercept=1955),color="#E2C43F",size=2)+annotate("text", x = 1958, y = "NEVADA", label = "小兒麻痺疫苗")
ggplot(pl, aes(YEAR, variable)) + geom_tile(aes(fill = sum),colour = "white")+ scale_fill_gradient(low = "white",high = "steelblue") +geom_vline(aes(xintercept=1955),color="#E2C43F",size=2)+annotate("text", x = 1958, y = "NEVADA",alpha = .2, label = "小兒麻痺疫苗")
ggplot(pl, aes(YEAR, variable)) + geom_tile(aes(fill = sum),colour = "white")+ scale_fill_gradient(low = "white",high = "steelblue") +geom_vline(aes(xintercept=1955),color="#E2C43F",size=2)+annotate("text", x = 1958, y = "NEVADA",alpha = .5, label = "小兒麻痺疫苗")
ggplot(pl, aes(YEAR, variable)) + geom_tile(aes(fill = sum),colour = "white")+ scale_fill_gradient(low = "white",high = "steelblue") +geom_vline(aes(xintercept=1955),color="#E2C43F",size=2)+annotate("text", x = 1958, y = "NEVADA",alpha = .5,color="#E2C43F", label = "小兒麻痺疫苗")
ggplot(pl, aes(YEAR, variable)) + geom_tile(aes(fill = sum),colour = "white")+ scale_fill_gradient(low = "white",high = "steelblue") +geom_vline(aes(xintercept=1955),color="#E2C43F",size=2)+annotate("text", x = 1958, y = "NEVADA",color="#E2C43F", label = "小兒麻痺疫苗")
ggplot(pl, aes(YEAR, variable)) + geom_tile(aes(fill = sum),colour = "white")+ scale_fill_gradient(low = "white",high = "steelblue") +geom_vline(aes(xintercept=1955),color="#E2C43F",size=2)+annotate("text", x = 1958, y = "NEVADA",color="#CF9546", label = "小兒麻痺疫苗")
ggplot(pl, aes(YEAR, variable)) + geom_tile(aes(fill = sum),colour = "white")+ scale_fill_gradient(low = "white",high = "steelblue") +geom_vline(aes(xintercept=1955),color="#E2C43F",size=2)+annotate("text", x = 1958, y = "NEVADA",color="#CF9546", label = "小兒麻痺疫苗被發明出來")
ggplot(pl, aes(YEAR, variable)) + geom_tile(aes(fill = sum),colour = "white")+ scale_fill_gradient(low = "white",high = "steelblue") +geom_vline(aes(xintercept=1955),color="#E2C43F",size=2)+annotate("text", x = 1958, y = "NEVADA",color="#CF9546",rotate=90, label = "小兒麻痺疫苗被發明出來")
ggplot(pl, aes(YEAR, variable)) + geom_tile(aes(fill = sum),colour = "white")+ scale_fill_gradient(low = "white",high = "steelblue") +geom_vline(aes(xintercept=1955),color="#E2C43F",size=2)+annotate("text", x = 1958, y = "NEVADA",color="#CF9546",angle = 90, label = "小兒麻痺疫苗被發明出來")
stData <- read.csv("C:/Users/hsuen/Downloads/106_student.csv")
library(readr)
stData <- read.csv("C:/Users/hsuen/Downloads/106_student.csv")
stData <- read_csv("C:/Users/hsuen/Downloads/106_student.csv")
View(stData)
View(stData)
stData %>% filter(等級別="M 碩士"|"B 學士")
stFilt<- filter(stData,等級別="M 碩士|B 學士")
?filter
stFilt<- filter(stData,等級別="M 碩士")
stFilt<- filter(stData,等級別=="M 碩士")
View(stFilt)
View(stFilt)
stFilt<- filter(stData,等級別=="M 碩士|B 學士")
stFilt<- filter(stData,等級別=="M 碩士"|"B 學士")
stFilt<- filter(stData,等級別==c("M 碩士","B 學士"))
stFilt<- filter(stData,等級別==c("M 碩士","B 學士"),`日間∕進修別`=="D 日")
stGroup<-st %>% group_by(學校代碼)
stGroup<-stFilt %>% group_by(學校代碼)
View(stGroup)
View(stGroup)
stGroup<-data.frame(ftGrade=stFilt$一年級男生+stFilt$一年級女生)
stFilt$一年級男生+stFilt$一年級女生
library(readr)
stData <- read_csv("C:/Users/hsuen/Downloads/106_student.csv")
stFilt<- filter(stData,等級別==c("M 碩士","B 學士"),`日間∕進修別`=="D 日")
stGroup<-data.frame(ftGrade=stFilt$一年級男生+stFilt$一年級女生)
stGroup<-list(ftGrade=stFilt$一年級男生+stFilt$一年級女生)
stFilt$一年級男生+stFilt$一年級女生
stFilt<- filter(stData,等級別==c("M 碩士","B 學士"),`日間∕進修別`=="D 日") %>% summerize(ftGrade=一年級男生+一年級女生))
stFilt<- filter(stData,等級別==c("M 碩士","B 學士"),`日間∕進修別`=="D 日") %>% summerize(ftGrade=一年級男生+一年級女生)
stFilt<- filter(stData,等級別==c("M 碩士","B 學士"),`日間∕進修別`=="D 日") %>% select(1:19)
View(stFilt)
View(stFilt)
stFilt<- filter(stData,等級別==c("M 碩士","B 學士"),`日間∕進修別`=="D 日")
stFilt<- filter(stData,等級別==c("M 碩士","B 學士"),`日間∕進修別`=="D 日") %>% select(2:19)
stFilt<- filter(stData,等級別==c("M 碩士","B 學士"),`日間∕進修別`=="D 日")
stFilt<- filter(stData,等級別==c("M 碩士","B 學士"),`日間∕進修別`=="D 日") %>% select(2:20)
stFilt<- filter(stData,等級別==c("M 碩士","B 學士"),`日間∕進修別`=="D 日") %>% select(2:20) %>% summarise(4:20)
stFilt<- filter(stData,等級別==c("M 碩士","B 學士"),`日間∕進修別`=="D 日") %>% select(2:20) %>% summarise(4:19)
stFilt<- filter(stData,等級別==c("M 碩士","B 學士"),`日間∕進修別`=="D 日") %>% select(2:20) %>% summarise(4:17)
stFilt<- filter(stData,等級別==c("M 碩士","B 學士"),`日間∕進修別`=="D 日")
stFilt<- filter(stData,等級別==c("M 碩士","B 學士"),`日間∕進修別`=="D 日") %>% select(2:21)
縣市名稱
stGrather<-gather(stFilt,grade,N,-學校名稱,-等級別,-縣市名稱)
library(dplyr)
stGrather<-gather(stFilt,grade,N,-學校名稱,-等級別,-縣市名稱)
library(tidyr)
library(tidyr)
stGrather<-gather(stFilt,grade,N,-學校名稱,-等級別,-縣市名稱)
%>% group_by(學校名稱,等級別,縣市名稱) %>% summarise(tot=sum(N,na.rm = T))
stGrather<-gather(stFilt,grade,N,-學校名稱,-等級別,-縣市名稱) %>% group_by(學校名稱,等級別,縣市名稱) %>% summarise(tot=sum(N,na.rm = T))
View(stGrather)
View(stGrather)
stGrather<-gather(stFilt,grade,N,-學校名稱,-等級別,-縣市名稱)
View(stGrather)
View(stGrather)
View(stGrather)
View(stGrather)
stFilt<- filter(stData,等級別==c("M 碩士","B 學士"),`日間∕進修別`=="D 日") %>% select(2:21)
stGrather<-gather(stFilt,grade,N,-學校名稱,-等級別,-縣市名稱,-`日間∕進修別) %>% group_by(學校名稱,等級別,縣市名稱) %>% summarise(tot=sum(N,na.rm = T))
stGrather<-gather(stFilt,grade,N,-學校名稱,-等級別,-縣市名稱,-`日間∕進修別`) %>% group_by(學校名稱,等級別,縣市名稱) %>% summarise(tot=sum(N,na.rm = T))
stGrather<-gather(stFilt,grade,N,-學校名稱,-等級別,-縣市名稱,-`日間∕進修別`)
stGrather$N<-as.numeric(stGrather$N)
stFilt<- filter(stData,等級別==c("M 碩士","B 學士"),`日間∕進修別`=="D 日") %>% select(2:21)
stGrather<-gather(stFilt,grade,N,-學校名稱,-等級別,-縣市名稱,-`日間∕進修別`)
stGrather$N<-as.numeric(stGrather$N)
stGrather<-gather(stFilt,grade,N,-學校名稱,-等級別,-縣市名稱,-`日間∕進修別`)
stGrather$N<-as.numeric(stGrather$N)
stFilt<- filter(stData,等級別==c("M 碩士","B 學士"),`日間∕進修別`=="D 日") %>% select(2:21)
str(stGrather$N)
stFilt<- filter(stData,等級別==c("M 碩士","B 學士"),`日間∕進修別`=="D 日") %>% select(2:21)
stGrather<-gather(stFilt,grade,N,-學校名稱,-等級別,-縣市名稱,-`日間∕進修別`)
str(stGrather$N)
stData <- read_csv("C:/Users/hsuen/Downloads/107_student.csv")
stData <- read_csv("C:/Users/hsuen/Downloads/107_student.csv")
stData <- read_csv("C:/Users/hsuen/Downloads/107_student.csv")
View(stData)
View(stData)
stFilt<- filter(stData,等級別==c("M 碩士","B 學士"),`日間∕進修別`=="D 日") %>% select(2:21)
stGrather<-gather(stFilt,grade,N,-學校名稱,-等級別,-縣市名稱,-`日間∕進修別`)
stGrather$N<-as.numeric(stGrather$N)
str(stGrather$N)
stGroup<-stGrather %>% group_by(學校名稱,等級別,縣市名稱) %>% summarise(tot=sum(N,na.rm = T))
View(stGroup)
View(stGroup)
library(treemap)
install.packages("treemap")
#install.packages("treemap")
library(treemap)
#install.packages("treemap")
library(treemap)
treemap(stGroup,index = c("縣市名稱","學校名稱","等級別"),vSize="tot",fontfamily.labels = "黑體-繁 中黑")
treemap(stGroup,index = c("縣市名稱","學校名稱","等級別"),vSize="tot")
stData <- read_csv("C:/Users/hsuen/Downloads/107_student.csv")
stFilt<- filter(stData,等級別==c("M 碩士","B 學士")&`日間∕進修別`=="D 日") %>% select(2:21)
stGrather<-gather(stFilt,grade,N,-學校名稱,-等級別,-縣市名稱,-`日間∕進修別`)
stGrather$N<-as.numeric(stGrather$N)
stGroup<-stGrather %>% group_by(學校名稱,等級別,縣市名稱) %>% summarise(tot=sum(N,na.rm = T))
treemap(stGroup,index = c("縣市名稱","學校名稱","等級別"),vSize="tot")
stFilt<- filter(stData,等級別==c("M 碩士","B 學士")&`日間∕進修別`=="D 日") %>% select(2:21,-`日間∕進修別`)
stData <- read_csv("C:/Users/hsuen/Downloads/107_student.csv")
stFilt<- filter(stData,等級別==c("M 碩士","B 學士")&`日間∕進修別`=="D 日") %>% select(2:21,-`日間∕進修別`)
stGrather<-gather(stFilt,grade,N,-學校名稱,-等級別,-縣市名稱)
stGrather$N<-as.numeric(stGrather$N)
stGroup<-stGrather %>% group_by(學校名稱,等級別,縣市名稱) %>% summarise(tot=sum(N,na.rm = T))
treemap(stGroup,index = c("縣市名稱","學校名稱","等級別"),vSize="tot")
stData
View(stData)
View(stData)
View(stFilt)
View(stFilt)
stData <- read_csv("C:/Users/hsuen/Downloads/107_student.csv")
stFilt<-stData %>% filter(等級別 %in% c("M 碩士","B 學士")&`日間∕進修別`=="D 日") %>% select(-學校代碼,-體系別,-`日間∕進修別`)
stGrather<-gather(stFilt,grade,N,-學校名稱,-等級別,-縣市名稱)
stGrather$N<-as.numeric(stGrather$N)
stGroup<-stGrather %>% group_by(學校名稱,等級別,縣市名稱) %>% summarise(tot=sum(N,na.rm = T))
treemap(stGroup,index = c("縣市名稱","學校名稱","等級別"),vSize="tot")
library(SportsAnalytics)
NBA1819<-fetch_NBAPlayerStatistics("18-19")
lm(TotalPoints~TotalMinutesPlayed,data =NBA1819)
install.packages("mlbench")
library(mlbench)
data(BostonHousing)
View(BostonHousing)
View(BostonHousing)
glm(medv~crim+tax+dis, data=BostonHousing)
data(PimaIndiansDiabetes)
glm(diabetes~pregnant+glucose+triceps+mass, data=PimaIndiansDiabetes,family = "binomial")
View(PimaIndiansDiabetes)
View(PimaIndiansDiabetes)
Diabetes <- glm(diabetes~pregnant+glucose+triceps+mass, data=PimaIndiansDiabetes,family = "binomial")
sumD <- summary(Diabetes)
sumD$coefficients
#
install.packages("rpart")
install.packages("rpart.plot")
glm(diabetes~.,data=PimaIndiansDiabetes)
glm(diabetes~.,data=PimaIndiansDiabetes,family = "binomial")
DiabetesAll <-glm(diabetes~.,data=PimaIndiansDiabetes,family = "binomial")
DiabetesAll <-rpart(diabetes~.,data=PimaIndiansDiabetes)
library(rpart)
library(rpart.plot)
DiabetesAll <-rpart(diabetes~.,data=PimaIndiansDiabetes)
prp(DiabetesAll)
library(MASS)
library(caret)
install.packages("caret")
library(mlbench)
data(Sonar)
View(Sonar)
View(Sonar)
Sonar$Test <-F
Sonar[sample(1:nrow(Sonar),nrow(Sonar)/3),]$Test<-T
Sonar$Class<-factor(Sonar$Class)
c(sum(Sonar$Test==F),sum(Sonar$Test==T))
str(Sonar$Class)
SonarTrain<-glm(Class~.,data =Sonar[NBA1516$Test==F,],family = "binomial")
SonarTrain<-glm(Class~.,data =Sonar[Sonar$Test==F,],family = "binomial")
View(SonarTrain)
View(SonarTrain)
summary(fit)$coefficients
#邏輯迴歸驗證
summary(SonarTrain)$coefficients
SonarFinal<-stepAIC(SonarTrain,direction = "both",trace=T)
summary(SonarFinal)$coefficients
MineralP<-predict(SonarFinal, newdata = Sonar[Sonar$Test==T,], type="response") #response:機率
MineralP
table(MineralP>0.5,Sonar[Sonar$Test==T,]$Class)
table(MineralP>0.4,Sonar[Sonar$Test==T,]$Class)
table(MineralP>0.3,Sonar[Sonar$Test==T,]$Class)
table(MineralP>0.2,Sonar[Sonar$Test==T,]$Class)
table(MineralP>0.1,Sonar[Sonar$Test==T,]$Class)
table(MineralP>0,Sonar[Sonar$Test==T,]$Class)
table(MineralP>05,Sonar[Sonar$Test==T,]$Class)
table(MineralP>0.5,Sonar[Sonar$Test==T,]$Class)
MineralAns<-factor(ifelse(MineralP>0.5,1,0),levels=c(0,1))
MineralAns
#計算各效能指標 #0:mineral,1:rock
sensitivity(MineralAns,Sonar[Sonar$Test==T,]$Class,positive="0") #Sensitivity 敏感性
library(caret) #效能指標package
#計算各效能指標 #0:mineral,1:rock
sensitivity(MineralAns,Sonar[Sonar$Test==T,]$Class,positive="0") #Sensitivity 敏感性
#計算各效能指標 #0:mineral,1:rock
sensitivity(MineralAns,Sonar[Sonar$Test==T,]$Class,positive="2") #Sensitivity 敏感性
str(Sonar$Class) #M:1,R:2
Sonar$Class<-factor(Sonar$CLass,levels=c(0,1))
MineralAns<-factor(ifelse(MineralP>0.5,1,0),levels=c(1,2))
MineralAns
MineralP
table(MineralP>0.5,Sonar[Sonar$Test==T,]$Class)
MineralAns<-factor(ifelse(MineralP>0.5,1,0),levels=c(1,2))
MineralAns
#將計算出來是礦物的標示出來，存在一個表格
MineralAns<-factor(ifelse(MineralP>0.5,1,2),levels=c(1,2))
table(MineralP>0.5,Sonar[Sonar$Test==T,]$Class)
MineralAns<-factor(ifelse(MineralP>0.5,1,2),levels=c(1,2))
MineralAns
table(MineralP>0.5,Sonar[Sonar$Test==T,]$Class)
RockP<-predict(SonarFinal, newdata = Sonar[Sonar$Test==T,], type="response") #response:機率
#效能指標的一個小表格
table(RockP>0.5,Sonar[Sonar$Test==T,]$Class)
#將計算出來是礦物的標示出來，存在一個表格
RockAns<-factor(ifelse(RockP>0.5,2,1),levels=c(2,1))
RockAns
#計算各效能指標 #0:mineral,1:rock
sensitivity(RockAns,Sonar[Sonar$Test==T,]$Class,positive="2") #Sensitivity 敏感性
str(Sonar$Class) #M:1,R:2
#計算各效能指標 #0:mineral,1:rock
sensitivity(RockAns,Sonar[Sonar$Test==T,]$Class,positive="1") #Sensitivity 敏感性
RockAns
table(RockP>0.5,Sonar[Sonar$Test==T,]$Class)
str(RockAns)
#計算各效能指標 #1:Mineral,2:Rock
sensitivity(RockAns,Sonar[Sonar$Test==T,]$Class,positive="1") #Sensitivity 敏感性
#final project
library(readr)
InstaTPcafe <-read_html("https://www.instastalker.net/tag/taipeicafe")
library(rvest)
InstaTPcafe <-read_html("https://www.instastalker.net/tag/taipeicafe")
TPcafeNode <-html_nodes(InstaTPcafe,".posts-author__footer-info a")
TPcafeText <-html_text()
TPcafeText <-html_text()
library(xml2)
TPcafeText <-html_text()
library(curl)
#final project
library(readr)
library(rvest)
library(xml2)
TPcafeText <-html_text()
TPcafeText <-InstaTPcafe %>% html_nodes(".posts-author__footer-info a") %>% html_text()
TPcafeText
TPcafeHashtag <- InstaTPcafe %>% html_nodes("  .ellipsis a") %>% html_text()
InstaTPcafe <-read_html("https://www.instastalker.net/tag/taipeicafe")
TPcafeAdd <-InstaTPcafe %>% html_nodes(".posts-author__footer-info a") %>% html_text()
TPcafeHashtag <- InstaTPcafe %>% html_nodes("  .ellipsis a") %>% html_text()
TPcafeHashtag
TPcafeTime<-InstaTPcafe %>% html_nodes(".posts-author__footer-info span:nth-child(1)") %>% html_text()
TPcafeTime
TPcafeAdd
TPcafeHashtag
table(TPcafeHashtag)
TPcafeTime<-InstaTPcafe %>% html_nodes(".posts-author__footer-info span:nth-child(1)") %>% html_text()
TPcafeTime
InstaTPfoodie <-read_html("https://www.instastalker.net/tag/taipeifoodie")
TPfoodieHashTime <-InstaTPfoodie %>% html_nodes(".ellipsis a , .posts-author__footer-info span:nth-child(1)") %>% html_text()
TPfoodieHashTime
TPcafeAdd
table(TPcafeAdd)
TPfoodieAddTime <-InstaTPfoodie %>% html_nodes(".posts-author__footer-info span:nth-child(1) , .posts-author__footer-info a , .clearfix:nth-child(14) a:nth-child(5)") %>% html_text()
TPfoodieAddTime
BostonHousing
library(mlbench)
data(BostonHousing)
glm(medv~crim+tax+dis, data=BostonHousing)
glm(medv~crim+tax+dis+rm+age+chas, data=BostonHousing)
BTHouse<-glm(medv~crim+tax+dis+rm+age+chas, data=BostonHousing)
BTHouse$aic
summary(BTHouse)$coefficients
summary(BTHouse)
BTHouse1<-glm(medv~crim+tax+dis, data=BostonHousing)
View(BostonHousing)
View(BostonHousing)
BostonHousing$Test <-F
BostonHousing$chas<-factor(BostonHousing$chas)
BostonHousing[sample(1:nrow(BostonHousing),nrow(BostonHousing)/3),]$Test<-T
c(sum(Sonar$Test==F),sum(Sonar$Test==T))
c(sum(BostonHousing$Test==F),sum(BostonHousing$Test==T))
BostonHousing$chas<-factor(BostonHousing$chas,levels = c(0,1))
View(BostonHousing)
View(BostonHousing)
HouseTrain<-glm(medv~.,data =BostonHousing[BostonHousing$Test==F,],family = "gaussian")
glm(medv~.,data =BostonHousing[BostonHousing$Test==F,],family = "gaussian")
stepAIC(HouseTrain,direction = "both",trace=T)
library(caret) #效能指標package
HouseFinal<-stepAIC(HouseTrain,direction = "both",trace=T)
library(MASS)
library(MASS)
HouseFinal<-stepAIC(HouseTrain,direction = "both",trace=T)
summary(HouseFinal)$coefficients
HouseFinal<-stepAIC(HouseTrain,direction = "both",trace=T)
summary(HouseFinal)$coefficients
createDataPartition(y=BostonHousing$medv,time=1,p=0.75)
set.seed(1)
createDataPartition(y=BostonHousing$medv,time=1,p=0.75) #用更理想的狀況下的隨機抽樣
TrainIndex<-createDataPartition(y=BostonHousing$medv,time=1,p=0.75) #用更理想的狀況下的隨機抽樣
BostonHousing[TrainIndex$Resample1,]
#用測試組預測房價，比對真實房價
HouseP<-predict(HouseFinal, newdata = HouseFinal[HouseFinal$Test==T,], type="response") #response:機率
predict(HouseFinal, newdata = HouseFinal[HouseFinal$Test==T,], type="response")
#用測試組預測房價，比對真實房價
HouseP<-predict(HouseFinal, newdata = BostonHousing[BostonHousing$Test==T,], type="response")
HouseP
#用測試組預測房價，比對真實房價
HouseP<-predict(HouseFinal, newdata = BostonHousing[BostonHousing$Test==T,])
HouseP
cor(x=HouseP,y=BostonHousing[BostonHousing$Test==T,]$medv)
plot(x=HouseP,y=BostonHousing[BostonHousing$Test==T,]$medv)
library(ggplot2)
ggplot(c(HouseP,BostonHousing),aes(x=HouseP,y=BostonHousing$medv))+geom_point()+geom_smooth()
ggplot(aes(x=HouseP,y=BostonHousing$medv))+geom_point()+geom_smooth()
ggplot(BostonHousing,aes(x=HouseP,y=BostonHousing$medv))+geom_point()+geom_smooth()
ggplot(c(HouseP,BostonHousing),aes(x=HouseP,y=BostonHousing[BostonHousing$Test==T,]$medv))+geom_point()+geom_smooth()
HouseP
#用測試組預測房價，比對真實房價
HouseP<-data.frame(predict(HouseFinal, newdata = BostonHousing[BostonHousing$Test==T,]))
ggplot(c(HouseP,BostonHousing),aes(x=HouseP,y=BostonHousing[BostonHousing$Test==T,]$medv))+geom_point()+geom_smooth()
View(HouseP)
View(HouseP)
row.names(HouseP)
BostonHousingTest<-BostonHousing[BostonHousing$Test==T,]
View(BostonHousingTest)
View(BostonHousingTest)
BostonHousingTest$Predict<-NA
BostonHousingTest$Predict<-HouseP
ggplot(BostonHousingTest,aes(x=Predict,y=medv))+geom_point()+geom_smooth()
library(ggplot2)
ggplot(BostonHousingTest,aes(x=Predict,y=medv))+geom_point()+geom_smooth()
HouseP
#用測試組預測房價，比對真實房價
HouseP<-predict(HouseFinal, newdata = BostonHousing[BostonHousing$Test==T,])
HouseP
BostonHousingTest$Predict<-HouseP
ggplot(BostonHousingTest,aes(x=Predict,y=medv))+geom_point()+geom_smooth()
library(rpart)
library(rpart.plot)
library(rpart)
library(rpart.plot)
IrisTree <-rpart(Species~.,data=iris)
prp(IrisTree)
prp(IrisTree,faclen=0,
fallen.leaves=TRUE,
shadow.col="azure3",  #http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf
extra=2)
prp(IrisTree,faclen=0,
fallen.leaves=TRUE,
shadow.col="azure3",  #http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf
box.palette=list("khaki", "mistyrose2","darkslategray3")
extra=2)
prp(IrisTree,faclen=0,
fallen.leaves=TRUE,
shadow.col="azure3",
box.palette=list("khaki", "mistyrose2","darkslategray3"),
extra=2)
prp(IrisTree,faclen=0,
shadow.col="azure3",
box.palette=list("khaki", "mistyrose2","darkslategray3"),
extra=2)
Sonar
library(mlbench)
Sonar
library(mlbench)
Sonar
library(mlbench) #石頭的
data(Sonar)
Sonar
Sonar
Sonar$Test <-F
Sonar[sample(1:nrow(Sonar),nrow(Sonar)/3),]$Test<-T
c(sum(Sonar$Test==F),sum(Sonar$Test==T))
str(Sonar$Class) #M:1,R:2
#decision tree
RockTree <-rpart(Class~.,data=Sonar)
prp(RockTree,faclen=0,
shadow.col="azure3",
box.palette=list("khaki", "mistyrose2","darkslategray3"),
extra=2)
View(Sonar)
View(Sonar)
TrainIndex<-createDataPartition(y=Sonar$Class,time=1,p=2/3)
TrainData<-Sonar[TrainIndex,]
TrainData<-Sonar[TrainIndex,]
TrainIndex<-createDataPartition(y=Sonar$Class,time=1,p=2/3,list = F)
TrainData<-Sonar[TrainIndex,]
TestData<-Sonar[-TrainIndex,]
#decision tree
RockTree <-rpart(Class~.,data=TrainData)
prp(RockTree,faclen=0,
shadow.col="azure3",
box.palette=list("khaki", "mistyrose2","darkslategray3"),
extra=2)
prp(RockTree,faclen=0,
shadow.col="azure3",
box.palette=list("khaki", "mistyrose2","darkslategray3"),
extra=2)
TrainIndex<-createDataPartition(y=Sonar$Class,time=1,p=2/3,list = F)
TrainData<-Sonar[TrainIndex,]
TestData<-Sonar[-TrainIndex,]
RockTree <-rpart(Class~.,data=TrainData)
prp(RockTree,faclen=0,
shadow.col="azure3",
box.palette=list("khaki", "mistyrose2","darkslategray3"),
extra=2)
RockFinal<-stepAIC(TrainData,direction = "both",trace=T) #透過放參數、拿出參數把AIC用到最小
View(TestData)
RockPre<-predict(RockTree, newdata = TestData)
RockPre
ifelse(RockPre$M>RockPre$R,M,R)
RockAns<-factor(ifelse(RockPre$M>RockPre$R,M,R))
View(RockPre)
#決策樹驗證
RockPre<-predict(RockTree, newdata = TestData,type = "class")
RockPre
Sonar$Class[-TrainIndex,]
Sonar[-TrainIndex,]$Class
table(Sonar[-TrainIndex,]$Class,RockPre)
nrow(RockPre)
nrow(TestData)
TestData$Test<-RockPre
sum(TestData$Class==RockPre)/nrow(TestData)
View(TestData)
View(TestData)
sum(TestData$Class==TestData$Test)/nrow(TestData)
sum(TestData$Class==TestData$Test)
row(TestData)
nrow(TestData)
library(jsonlite)
TY<-fromJSON("http://data.tycg.gov.tw/api/v1/rest/datastore/007821fe-dc81-41cc-abb1-71903fb6e540?format=json")
View(TY)
View(TY)
TY$result$records
data.frame(TY$result$records)
data.frame(TY$result$records)
#final project
library(readr)
library(rvest)
FoodPic <-InstaFood %>% html_nodes(".posts-box__image :nth-child(1)") %>% html_text()
InstaFood <-read_html("https://www.instastalker.net/user/nissa523food_/1414556578")
FoodPic <-InstaFood %>% html_nodes(".posts-box__image :nth-child(1)") %>% html_text()
data.frame(FoodPic)
?html_attrs
FoodPic <-InstaFood %>% html_nodes(".posts-box__image :nth-child(1) img") %>% html_attrs()
data.frame(FoodPic)
FoodPic <-InstaFood %>% html_nodes(".posts-box__image :nth-child(1) img src") %>% html_attrs()
data.frame(FoodPic)
